from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
import requests
from bs4 import BeautifulSoup
from time import sleep


def get_driver():
    options = Options()
    options.add_argument("user-data-dir=C:\\Users\\anvin\\AppData\\Local\\Google\\Chrome\\User Data")
    path = 'C:\\Program Files (x86)\\Google\\chromedriver.exe'
    options.add_experimental_option("detach", True)
    driver = webdriver.Chrome(path, options=options)
    text_search = 'Product Development Engineer'
    location_search = 'california'
    base_site = 'https://www.linkedin.com/jobs'
    # base_site = 'https://www.linkedin.com/jobs/search/?geoId=102095887&keywords=Product%20Development%20Engineer&
    # location=California%2C%20United%20States'
    headerss = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"
            "70.0.3538.102 Safari/537.36 Edge/18.19582"}
    driver.get(base_site)
    try:
        search_bars = driver.find_elements_by_class_name('jobs-search-box__text-input')
        search_keywords = search_bars[0]
        search_keywords.send_keys(text_search)
        sleep(1)
        search_location = search_bars[3]
        search_location.send_keys(location_search)
        sleep(1)
        search_location.send_keys(Keys.RETURN)
        WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="search-reusables__filters-'
                                                                              'bar"]/div/div'))).click()   # All Filters
        sleep(3)
        new_url = driver.current_url
        response = requests.get(new_url, headers=headerss).text
        soup = BeautifulSoup(response, 'lxml')

        WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="search-reusables__filters-bar"]'
                                                                             '/ul/li[3]/div'))).click()
        past_week = '//*[@id="artdeco-hoverable-artdeco-gen-42"]/div[1]/div/form/fieldset/div[1]/ul/li[3]/label/p/span'
        job_type = driver.find_element(by='xpath', value=past_week)
        job_type.click()
        sleep(2)
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '/html/body/div[5]/div[3]/'
                                                                             'div[3]/section/div/div/div/ul/li[3]/div/'
                                                                             'div/div/div[1]/div/form/fieldset/div[2]/'
                                                                             'button[2]'))).click()
        sleep(2)
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="search-reusables__filters-bar"]'
                                                                             '/ul/li[6]/div'))).click()
        emp_type = '//*[@id="artdeco-hoverable-artdeco-gen-49"]/div[1]/div/form/fieldset/div[1]/ul/li[1]/label/p/span'
        emp_type_val = driver.find_element(by='xpath', value=emp_type)
        emp_type_val.click()
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, '/html/body/div[5]/div[3]/div[3]/section/'
                                                                             'div/div/div/ul/li[6]/div/div/div/div[1]/'
                                                                             'div/form/fieldset/div[2]/button[2]')))\
            .click()

        # y = driver.find_elements_by_class_name('search-filters-bar')   # to select the complete top bar
        # driver.find_element_by_xpath('//*[@id="ember225"]').click()    # to click on show results option if filter
    except Exception as e:
        print(e)


if __name__ == "__main__":
    get_driver()
